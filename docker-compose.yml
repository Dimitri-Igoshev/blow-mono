services:
  mongo:
    image: mongo:7
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-example}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-blow}
    volumes:
      - mongo_data:/data/db
    networks:
      - blow

  backend:
    build:
      context: ./blow-be
    depends_on:
      - mongo
    env_file:
      - ./deploy/env/backend.env
    environment:
      - NODE_ENV=production
    ports:
      - "4000:4000"
    volumes:
      - uploads_data:/app/uploads
    networks:
      - blow

  frontend:
    build:
      context: ./blow-fe
    depends_on:
      - backend
    env_file:
      - ./deploy/env/frontend.env
    environment:
      - NODE_ENV=production
    networks:
      - blow

  admin:
    build:
      context: ./blow-ap
    depends_on:
      - backend
    env_file:
      - ./deploy/env/admin.env
    networks:
      - blow

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - frontend
      - admin
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/conf.d:/etc/nginx/conf.d:ro
      - certbot_challenges:/var/www/certbot
      - certbot_certs:/etc/letsencrypt
    networks:
      - blow

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot_challenges:/var/www/certbot
      - certbot_certs:/etc/letsencrypt
    entrypoint: /bin/sh
    networks:
      - blow

volumes:
  mongo_data:
  uploads_data:
  certbot_challenges:
  certbot_certs:

networks:
  blow:
    driver: bridge
