# upstream frontend_app {
#   zone frontend_app 64k;
#   server frontend:3000 resolve;
# }

# upstream admin_app {
#   zone admin_app 64k;
#   server admin:80 resolve;
# }

# upstream backend_app {
#   zone backend_app 64k;
#   server backend:4000 resolve;
# }

# server {
#   listen 80;
#   listen [::]:80;
#   server_name blow.ru www.blow.ru admin.blow.ru api.blow.ru;

#   location /.well-known/acme-challenge/ {
#     root /var/www/certbot;
#   }

#   location / {
#     return 301 https://$host$request_uri;
#   }
# }

# server {
#   listen 443 ssl;
#   listen [::]:443 ssl;
#   http2 on;
#   server_name blow.ru www.blow.ru;

#   ssl_certificate /etc/letsencrypt/live/blow.ru/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/blow.ru/privkey.pem;
#   include /etc/nginx/conf.d/options-ssl-nginx.conf;

#   location = /api {
#     proxy_pass http://backend_app/api;
#     include /etc/nginx/conf.d/proxy-params.conf;
#   }

#   location /api/ {
#     proxy_pass http://backend_app/api/;
#     include /etc/nginx/conf.d/proxy-params.conf;
#   }

#   location / {
#     proxy_pass http://frontend_app;
#     include /etc/nginx/conf.d/proxy-params.conf;
#   }
# }

# server {
#   listen 443 ssl;
#   listen [::]:443 ssl;
#   http2 on;
#   server_name admin.blow.ru;

#   ssl_certificate /etc/letsencrypt/live/blow.ru/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/blow.ru/privkey.pem;
#   include /etc/nginx/conf.d/options-ssl-nginx.conf;

#   location / {
#     proxy_intercept_errors on;                    # <-- перехватываем 404 от admin:80
#     error_page 404 = /index.html;                 # <-- и подсовываем index.html (SPA)
#     proxy_pass http://admin_app;
#     include /etc/nginx/conf.d/proxy-params.conf;
#     try_files $uri $uri/ /index.html;
#   }

#   # чтобы /index.html тоже шёл в upstream (до него выше дойдёт internal redirect)
#   location = /index.html {
#     proxy_pass http://admin_app;
#     include /etc/nginx/conf.d/proxy-params.conf;
#   }
# }

# server {
#   listen 443 ssl;
#   listen [::]:443 ssl;
#   http2 on;
#   server_name api.blow.ru;

#   ssl_certificate /etc/letsencrypt/live/blow.ru/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/blow.ru/privkey.pem;
#   include /etc/nginx/conf.d/options-ssl-nginx.conf;

#   location / {
#     proxy_pass http://backend_app$backend_api_prefix$uri$is_args$args;
#     include /etc/nginx/conf.d/proxy-params.conf;
#   }
# }

# ---------- upstreams ----------
upstream frontend_app { zone frontend_app 64k; server frontend:3000 resolve; }
upstream admin_app    { zone admin_app    64k; server admin:80     resolve; }
upstream backend_app  { zone backend_app  64k; server backend:4000 resolve; }

# ---------- :80 -> :443 ----------
server {
  listen 80; listen [::]:80;
  server_name blow.ru www.blow.ru admin.blow.ru api.blow.ru;

  location /.well-known/acme-challenge/ { root /var/www/certbot; }
  return 301 https://$host$request_uri;
}

# ---------- blow.ru (фронт) ----------
server {
  listen 443 ssl; listen [::]:443 ssl; http2 on;
  server_name blow.ru www.blow.ru;

  ssl_certificate     /etc/letsencrypt/live/blow.ru/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/blow.ru/privkey.pem;
  include /etc/nginx/conf.d/options-ssl-nginx.conf;

  location = /api/notification {
    include /etc/nginx/conf.d/proxy-params.conf;
    proxy_pass http://frontend_app;   # пробросит оригинальный URI /api/notification в Next
  }

  # если фронт иногда ходит к /api — прокидываем на бэк
  location = /api  { include /etc/nginx/conf.d/proxy-params.conf; proxy_pass http://backend_app/api; }
  location /api/   { include /etc/nginx/conf.d/proxy-params.conf; proxy_pass http://backend_app/api/; }

  # остальное — на фронтенд
  location / {
    include /etc/nginx/conf.d/proxy-params.conf;
    proxy_pass http://frontend_app;
  }
}

# ---------- admin.blow.ru (админка-статик под nginx внутри admin) ----------
server {
  listen 443 ssl; listen [::]:443 ssl; http2 on;
  server_name admin.blow.ru;

  ssl_certificate     /etc/letsencrypt/live/blow.ru/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/blow.ru/privkey.pem;
  include /etc/nginx/conf.d/options-ssl-nginx.conf;

  # просто проксируем ВСЁ в admin:80 (SPA fallback делается ВНУТРИ admin!)
  location / {
    include /etc/nginx/conf.d/proxy-params.conf;
    proxy_pass http://admin_app;
  }
}

# ---------- api.blow.ru ----------
server {
  listen 443 ssl; listen [::]:443 ssl; http2 on;
  server_name api.blow.ru;

  ssl_certificate     /etc/letsencrypt/live/blow.ru/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/blow.ru/privkey.pem;
  include /etc/nginx/conf.d/options-ssl-nginx.conf;

  # Медиа из корня: https://api.blow.ru/<дата>/file.webp
  location / {
    alias /app/uploads/;
    autoindex off;
    expires 7d;
    add_header Cache-Control "public, max-age=604800";
    try_files $uri =404;
  }

  # API по /api/ — без кэша
  location ^~ /api/ {
    include /etc/nginx/conf.d/proxy-params.conf;
    add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;

    proxy_pass http://backend_app;
  }
}
